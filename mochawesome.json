{
  "stats": {
    "suites": 6,
    "tests": 28,
    "passes": 28,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 28,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-01-08T18:38:00.016Z",
    "end": "2025-01-08T18:39:15.751Z",
    "duration": 75735
  },
  "results": [
    {
      "uuid": "0b183321-dbed-4d2f-b71d-eba761b47d94",
      "title": "",
      "fullFile": "cypress\\e2e\\firstTests1.spec.js",
      "file": "cypress\\e2e\\firstTests1.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4f795bb2-a7e3-403a-bf88-8edfa3140721",
          "title": "First test suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "first test",
              "fullTitle": "First test suite first test",
              "timedOut": null,
              "duration": 20,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "fb01e452-90e6-4527-945c-d288ab682cdc",
              "parentUUID": "4f795bb2-a7e3-403a-bf88-8edfa3140721",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "second test",
              "fullTitle": "First test suite second test",
              "timedOut": null,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "298b154e-cda9-46ea-a50c-a7034364c076",
              "parentUUID": "4f795bb2-a7e3-403a-bf88-8edfa3140721",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "third test",
              "fullTitle": "First test suite third test",
              "timedOut": null,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "b6c6776a-baf3-42ed-8b1f-27c63b6a03ac",
              "parentUUID": "4f795bb2-a7e3-403a-bf88-8edfa3140721",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "145131f6-a230-4114-86d7-a39848d3f20f",
              "title": "Site section",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "a9af10ab-fafe-4c6d-b834-385236bfb1ab",
                  "title": "First test suite",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "first test",
                      "fullTitle": "First test suite Site section First test suite first test",
                      "timedOut": null,
                      "duration": 14,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "108e3a68-7815-4783-b708-4fe261b9b75b",
                      "parentUUID": "a9af10ab-fafe-4c6d-b834-385236bfb1ab",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "second test",
                      "fullTitle": "First test suite Site section First test suite second test",
                      "timedOut": null,
                      "duration": 8,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "252499bb-e43b-4fc0-b5f3-74aa5542e1bf",
                      "parentUUID": "a9af10ab-fafe-4c6d-b834-385236bfb1ab",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "108e3a68-7815-4783-b708-4fe261b9b75b",
                    "252499bb-e43b-4fc0-b5f3-74aa5542e1bf"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 22,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "fb01e452-90e6-4527-945c-d288ab682cdc",
            "298b154e-cda9-46ea-a50c-a7034364c076",
            "b6c6776a-baf3-42ed-8b1f-27c63b6a03ac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 43,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2015b8b2-1e01-4b5f-8a70-5b7779e67e2a",
          "title": "Second test suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "first test",
              "fullTitle": "Second test suite first test",
              "timedOut": null,
              "duration": 18,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "8098fe15-2b14-4b0b-90a9-81b943e4cdb7",
              "parentUUID": "2015b8b2-1e01-4b5f-8a70-5b7779e67e2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "second test",
              "fullTitle": "Second test suite second test",
              "timedOut": null,
              "duration": 14,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "aea50c7c-00ea-4c2a-82c3-5e713c11afcf",
              "parentUUID": "2015b8b2-1e01-4b5f-8a70-5b7779e67e2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "third test",
              "fullTitle": "Second test suite third test",
              "timedOut": null,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "000fcac0-f16b-4355-88f9-88ad6f066054",
              "parentUUID": "2015b8b2-1e01-4b5f-8a70-5b7779e67e2a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8098fe15-2b14-4b0b-90a9-81b943e4cdb7",
            "aea50c7c-00ea-4c2a-82c3-5e713c11afcf",
            "000fcac0-f16b-4355-88f9-88ad6f066054"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 40,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f7e95c58-1600-412b-9b78-e10366b2beaf",
      "title": "",
      "fullFile": "cypress\\e2e\\jsonObjects.spec.js",
      "file": "cypress\\e2e\\jsonObjects.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "37519f2d-2277-466f-8eb5-5d6151cde86c",
          "title": "JSON objects suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "JSON objects test",
              "fullTitle": "JSON objects suite JSON objects test",
              "timedOut": null,
              "duration": 1548,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.openHomePage();\nconst simpleObject = {\n  \"key\": \"value\",\n  \"key2\": \"value2\"\n}; // key:pair\nconst simpleArrayOfValues = [\"one\", \"two\", \"three\"]; // just values\nconst arrayOfObjects = [{\n  \"key\": \"value\"\n}, {\n  \"key2\": \"value2\"\n}, {\n  \"key3\": \"value3\"\n}]; // aray of objects\nconst typesOfData = {\n  \"string\": \"A string value\",\n  \"number\": 10\n};\nconst mix = {\n  \"FirstName\": \"Natasha\",\n  \"LastName\": \"Kostovska\",\n  \"Age\": 29,\n  \"Students\": [{\n    \"firstName\": \"Sara\",\n    \"lastName\": \"Conor\"\n  }, {\n    \"firstName\": \"Bruce\",\n    \"lastName\": \"Willis\"\n  }]\n};\nconsole.log(simpleObject.key2);\nconsole.log(simpleObject[\"key2\"]);\nconsole.log(simpleArrayOfValues[1]);\nconsole.log(arrayOfObjects[2].key3);\nconsole.log(mix.Students[0].firstName);\nconst lastNameOfSecondStudent = mix.Students[1].lastName;",
              "err": {},
              "uuid": "8522131d-3289-4c1a-a7e8-aa895064f20d",
              "parentUUID": "37519f2d-2277-466f-8eb5-5d6151cde86c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8522131d-3289-4c1a-a7e8-aa895064f20d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1548,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b4d880d7-9f5b-41db-abdb-5f4cbf115c5e",
      "title": "",
      "fullFile": "cypress\\e2e\\secondTest.spec.js",
      "file": "cypress\\e2e\\secondTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9b6dc5a4-8b9c-42e6-8e8c-874177e5fb99",
          "title": "Test log out",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify user can log out succesfully",
              "fullTitle": "Test log out verify user can log out succesfully",
              "timedOut": null,
              "duration": 2800,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Settings').click();\ncy.contains('Or click here to logout').click();\ncy.get('.navbar-nav').should('contain', 'Sign up');",
              "err": {},
              "uuid": "23e459a1-5989-49fd-acc0-b33aee7890d1",
              "parentUUID": "9b6dc5a4-8b9c-42e6-8e8c-874177e5fb99",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "23e459a1-5989-49fd-acc0-b33aee7890d1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2800,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4f8944ed-dee4-46d9-a953-b2ce9da694c8",
      "title": "",
      "fullFile": "cypress\\e2e\\testWithPageObjects.js",
      "file": "cypress\\e2e\\testWithPageObjects.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a8efa9cc-e3b9-4e68-a13a-a397b185c20e",
          "title": "Page Object",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "navigation between pages",
              "fullTitle": "Page Object navigation between pages",
              "timedOut": null,
              "duration": 5450,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(500);\n_navigationPage.navigateTo.formLayoutPage();\n_navigationPage.navigateTo.datePickerPage();\n_navigationPage.navigateTo.smartTablePage();\n_navigationPage.navigateTo.tooltipPage();\n_navigationPage.navigateTo.toasterPage();",
              "err": {},
              "uuid": "4b557706-eeb9-49fb-9a1c-b4bba60cd6c3",
              "parentUUID": "a8efa9cc-e3b9-4e68-a13a-a397b185c20e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit Inline and Basic form and select tomorrow date in the calendar",
              "fullTitle": "Page Object should submit Inline and Basic form and select tomorrow date in the calendar",
              "timedOut": null,
              "duration": 7540,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_navigationPage.navigateTo.formLayoutPage();\n_formLayoutsPage.onFormLayoutsPage.submitInlineFormNameAndEmail('Natasha', 'test@test.com');\n_formLayoutsPage.onFormLayoutsPage.submitBasicFormwithEmailAndPass('test@test.com', 'password');\ncy.wait(500);\n_navigationPage.navigateTo.datePickerPage();\n_datePickerPage.onDatePickerPage.selectCommonDatePickerDateFromToday(1);\n_datePickerPage.onDatePickerPage.selectDatepickerWithRangeFromToday(7, 14);\n_navigationPage.navigateTo.smartTablePage();\n_smartTablePage.onSmartTablePage.addNewRecordWithFirstAndLastName('Natasha', 'Kostovska');\n_smartTablePage.onSmartTablePage.updateAgeByFirstName('Natasha', '29');\n_smartTablePage.onSmartTablePage.deleteRowByIndex(1);",
              "err": {},
              "uuid": "dc18e6e9-8892-489f-b2c4-052fc4cd399c",
              "parentUUID": "a8efa9cc-e3b9-4e68-a13a-a397b185c20e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4b557706-eeb9-49fb-9a1c-b4bba60cd6c3",
            "dc18e6e9-8892-489f-b2c4-052fc4cd399c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12990,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "36ed557d-667c-40fd-ae53-19d99f7fb8b3",
      "title": "",
      "fullFile": "cypress\\e2e\\workingwithAPIsTests.spec.js",
      "file": "cypress\\e2e\\workingwithAPIsTests.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e3e0022e-f808-447e-b6c8-29017647d811",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 3568,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', Cypress.env(\"apiUrl\") + '/api/articles/').as('postArticles');\nlet articleTitle = _faker.faker.word.noun();\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type(articleTitle); // the title needs to be unique so the article can be created\ncy.get('[formcontrolname=\"description\"]').type(\"A Description\");\ncy.get('[formcontrolname=\"body\"]').type(\"A Body\");\ncy.contains('Publish Article').click();\ncy.wait('@postArticles').then(xhr => {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(201);\n  expect(xhr.request.body.article.body).to.equal('A Body');\n  expect(xhr.response.body.article.description).to.equal('A Description');\n});",
              "err": {},
              "uuid": "db99df85-e703-490d-a848-fc6a37e71eca",
              "parentUUID": "e3e0022e-f808-447e-b6c8-29017647d811",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "intercepting and modifying the request and response",
              "fullTitle": "Test with backend intercepting and modifying the request and response",
              "timedOut": null,
              "duration": 2316,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*  cy.intercept('POST',Cypress.env(\"apiUrl\") +'/api/articles/',(req =>{\n      req.body.article.description =\"A Description 2\"\n  })).as('postArticles')*/\ncy.intercept('POST', Cypress.env(\"apiUrl\") + '/api/articles/', req => {\n  req.reply(res => {\n    expect(res.body.article.description).to.equal('A Description');\n    res.body.article.description = \"A Description 2\";\n  });\n}).as('postArticles');\nlet articleTitle = _faker.faker.word.noun();\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type(articleTitle); // the title needs to be unique so the article can be created\ncy.get('[formcontrolname=\"description\"]').type(\"A Description\");\ncy.get('[formcontrolname=\"body\"]').type(\"A Body\");\ncy.contains('Publish Article').click();\ncy.wait('@postArticles').then(xhr => {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(201);\n  expect(xhr.request.body.article.body).to.equal('A Body');\n  expect(xhr.response.body.article.description).to.equal('A Description 2');\n});",
              "err": {},
              "uuid": "97206302-07a9-4d78-b1d2-b2885d09f022",
              "parentUUID": "e3e0022e-f808-447e-b6c8-29017647d811",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify popular tags are intercepted",
              "fullTitle": "Test with backend verify popular tags are intercepted",
              "timedOut": null,
              "duration": 879,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "2324d02b-5d8c-4b92-a815-9e7e30780108",
              "parentUUID": "e3e0022e-f808-447e-b6c8-29017647d811",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify global feed likes count",
              "fullTitle": "Test with backend verify global feed likes count",
              "timedOut": null,
              "duration": 1297,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', Cypress.env(\"apiUrl\") + '/api/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n}); // * wild card this is in your feed section\ncy.intercept('GET', Cypress.env(\"apiUrl\") + '/api/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Feed').click();\ncy.get('app-article-list button').then(heartList => {\n  expect(heartList[0]).to.contain('1');\n  expect(heartList[1]).to.contain('5');\n});\ncy.fixture('articles').then(file => {\n  const articleLink = file.articles[1].slug;\n  file.articles[1].favoritesCount = 6;\n  cy.intercept('POST', Cypress.env(\"apiUrl\") + '/api/articles/' + articleLink + '/favorite', file);\n});\ncy.get('app-article-list button').eq(1).click().should('contain', '6');",
              "err": {},
              "uuid": "93e76dd2-ec9e-441d-b276-d006c8acd8d3",
              "parentUUID": "e3e0022e-f808-447e-b6c8-29017647d811",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete a new article in a global feed",
              "fullTitle": "Test with backend delete a new article in a global feed",
              "timedOut": null,
              "duration": 3676,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const bodyRequest = {\n  \"article\": {\n    \"body\": \"API 123456\",\n    \"description\": \"API testing\",\n    \"tagList\": [],\n    \"title\": \"Request from API\"\n  }\n};\ncy.get('@token').then(token => {\n  cy.request({\n    url: Cypress.env(\"apiUrl\") + '/api/articles/',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'POST',\n    body: bodyRequest\n  }).then(response => {\n    expect(response.status).to.equal(201);\n  });\n  cy.contains('Global Feed').click();\n  cy.wait(500);\n  cy.get('.article-preview').first().click();\n  cy.wait(500);\n  cy.get('.article-actions').contains('Delete Article').click();\n  cy.wait(500);\n  cy.request({\n    url: Cypress.env(\"apiUrl\") + '/api/articles?limit=10&offset=0',\n    headers: {\n      'Authorization': 'Token ' + token\n    },\n    method: 'GET'\n  }).its('body').then(body => {\n    expect(body.articles[0].title).not.to.equal('Request from API');\n  });\n});",
              "err": {},
              "uuid": "c6a9e71f-fdf4-40ab-918f-1769d83605ce",
              "parentUUID": "e3e0022e-f808-447e-b6c8-29017647d811",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db99df85-e703-490d-a848-fc6a37e71eca",
            "97206302-07a9-4d78-b1d2-b2885d09f022",
            "2324d02b-5d8c-4b92-a815-9e7e30780108",
            "93e76dd2-ec9e-441d-b276-d006c8acd8d3",
            "c6a9e71f-fdf4-40ab-918f-1769d83605ce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11736,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "799e9350-e620-4caa-a7fa-f91debf990e1",
      "title": "",
      "fullFile": "cypress\\e2e\\firstTests.spec.js",
      "file": "cypress\\e2e\\firstTests.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2be3046f-76fb-492c-8d96-7eb42b89a241",
          "title": "First test suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "first test",
              "fullTitle": "First test suite first test",
              "timedOut": null,
              "duration": 3741,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Finding locators\ncy.visit('/');\ncy.contains('Forms').click();\ncy.contains('Form Layouts').click();\n// by Tag name\ncy.get('input');\n// by id #\ncy.get('#inputEmail1');\n// by class value .\ncy.get('.input-full-width');\n// by attribute name []\ncy.get('[fullwidth]');\n// by attribute and value\ncy.get('[placeholder=\"Email\"]');\n// by entire class value \ncy.get('[class=\"input-full-width size-medium shape-rectangle\"]');\n// by two attributes \ncy.get('[placeholder=\"Email\"][fullwidth]');\n//by tag, attribute id and class, which web element have all of those\ncy.get('input[placeholder=\"Email\"]#inputEmail1.input-full-width');\n//by cypress test id (data-cy)\ncy.get('[data-cy=\"imputEmail1\"]');",
              "err": {},
              "uuid": "0be00270-c87b-47da-b660-d96f842ec230",
              "parentUUID": "2be3046f-76fb-492c-8d96-7eb42b89a241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "second test",
              "fullTitle": "First test suite second test",
              "timedOut": null,
              "duration": 1607,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/');\ncy.contains('Forms').click();\ncy.contains('Form Layouts').click();\n// get () - used to find elements on the page by locator globally\n// find() - find child elements by locator, can not bi cy.find must be a child to the parent element\n// contains () - find HTML text and by text and locator, only looking for the first match on the page\ncy.contains('Sign in');\ncy.contains('[status=\"warning\"]', 'Sign in');\ncy.contains('nb-card', 'Horizontal form').find('button');\ncy.contains('nb-card', 'Horizontal form').contains('Sign in');\ncy.contains('nb-card', 'Horizontal form').get('button'); // will find all button elements on the entire page\n//cypress chains and Dom\ncy.get('#inputEmail3').parents('form').find('button').should('contain', 'Sign in').parents('form').find('nb-checkbox').click();",
              "err": {},
              "uuid": "3dd64630-f391-4776-828a-9391b8f9ecf8",
              "parentUUID": "2be3046f-76fb-492c-8d96-7eb42b89a241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "save subject of the command",
              "fullTitle": "First test suite save subject of the command",
              "timedOut": null,
              "duration": 1611,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/');\ncy.contains('Forms').click();\ncy.contains('Form Layouts').click();\ncy.contains('nb-card', 'Using the Grid').find('[for=\"inputEmail1\"]').should('contain', 'Email');\ncy.contains('nb-card', 'Using the Grid').find('[for=\"inputPassword2\"]').should('contain', 'Password');\n// CANT DO THING LIKE THIS\n/* const usingTheGrid=  cy.contains('nb-card', 'Using the Grid')\n usingTheGrid.find('[for=\"inputEmail1\"]').should('contain','Email')\n usingTheGrid.find('[for=\"inputPassword2\"]').should('contain','Password') */\n// 1 Cypress Alias\ncy.contains('nb-card', 'Using the Grid').as('usingTheGrid');\ncy.get('@usingTheGrid').find('[for=\"inputEmail1\"]').should('contain', 'Email');\ncy.get('@usingTheGrid').find('[for=\"inputPassword2\"]').should('contain', 'Password');\n// 2 Cypress then() methods\ncy.contains('nb-card', 'Using the Grid').then(usingTheGridForm => {\n  cy.wrap(usingTheGridForm).find('[for=\"inputEmail1\"]').should('contain', 'Email');\n  cy.wrap(usingTheGridForm).find('[for=\"inputPassword2\"]').should('contain', 'Password');\n});",
              "err": {},
              "uuid": "d17c7e11-9947-46a6-96af-3ca8a4b59220",
              "parentUUID": "2be3046f-76fb-492c-8d96-7eb42b89a241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "extract text values",
              "fullTitle": "First test suite extract text values",
              "timedOut": null,
              "duration": 1384,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/');\ncy.contains('Forms').click();\ncy.contains('Form Layouts').click();\n//1 \ncy.get('[for=\"exampleInputEmail1\"]').should('contain', 'Email address');\n//2\ncy.get('[for=\"exampleInputEmail1\"]').then(label => {\n  const labelText = label.text();\n  expect(labelText).to.equal('Email address');\n  cy.wrap(labelText).should('contain', 'Email address');\n});\n//3\ncy.get('[for=\"exampleInputEmail1\"]').invoke('text').then(text => {\n  expect(text).to.equal('Email address');\n});\ncy.get('[for=\"exampleInputEmail1\"]').invoke('text').as('labelText').should('contain', 'Email address');\n//4\ncy.get('[for=\"exampleInputEmail1\"]').invoke('attr', 'class').then(classValue => {\n  expect(classValue).to.equal('label');\n});\n//5 invoke properties , the text exists in the input field\ncy.get('#exampleInputEmail1').type('test@test.com');\ncy.get('#exampleInputEmail1').invoke('prop', 'value').should('contain', 'test@test.com').then(property => {\n  expect(property).to.equal('test@test.com');\n});",
              "err": {},
              "uuid": "dcb525c7-6f0f-466b-8da0-67412d08b228",
              "parentUUID": "2be3046f-76fb-492c-8d96-7eb42b89a241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "radio buttons",
              "fullTitle": "First test suite radio buttons",
              "timedOut": null,
              "duration": 2043,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/');\ncy.contains('Forms').click();\ncy.contains('Form Layouts').click();\n// can be used only for input type radio or checkbox \ncy.contains('nb-card', 'Using the Grid').find('[type=\"radio\"]').then(radioButtons => {\n  cy.wrap(radioButtons).eq(0).check({\n    force: true\n  }).should('be.checked');\n  cy.wrap(radioButtons).eq(1).check({\n    force: true\n  });\n  cy.wrap(radioButtons).eq(0).should('not.be.checked');\n  cy.wrap(radioButtons).eq(2).should('be.disabled');\n});",
              "err": {},
              "uuid": "c20fc9fb-b795-46d3-8eb0-0e78eab337ff",
              "parentUUID": "2be3046f-76fb-492c-8d96-7eb42b89a241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "checkboxes",
              "fullTitle": "First test suite checkboxes",
              "timedOut": null,
              "duration": 1903,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/');\ncy.contains('Modal & Overlays').click();\ncy.contains('Toastr').click();\n// can use click only on the first element (click does not care of the status of the checkbox if its checked or not)\ncy.get('[type=\"checkbox\"]').eq(0).click({\n  force: true\n});\ncy.get('[type=\"checkbox\"]').eq(1).check({\n  force: true\n});\n// all will be checked, skipping those that are checked by default \ncy.get('[type=\"checkbox\"]').check({\n  force: true\n});\n//  all will be unchecked, skipping those that are unchecked by default\ncy.get('[type=\"checkbox\"]').uncheck({\n  force: true\n});",
              "err": {},
              "uuid": "d1c10e88-1337-4089-bfeb-cee94cb79581",
              "parentUUID": "2be3046f-76fb-492c-8d96-7eb42b89a241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Date picker",
              "fullTitle": "First test suite Date picker",
              "timedOut": null,
              "duration": 2423,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "function selectDayFromCurrent(day) {\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\n  let date = new Date();\n  date.setDate(date.getDate() + day); // adding +5 days from todays date, if we add +30 days the month won't be changed, if we add +60 the arrow wont be clicked we need function loop\n  console.log(date);\n  let futureDay = date.getDate();\n  let futureMonth = date.toLocaleDateString('en-US', {\n    month: 'short'\n  });\n  let futureYear = date.getFullYear();\n  let dateToAssert = `${futureMonth} ${futureDay}, ${futureYear}`;\n  cy.get('nb-calendar-navigation').invoke('attr', 'ng-reflect-date').then(dateAttribute => {\n    if (!dateAttribute.includes(futureMonth) || !dateAttribute.includes(futureYear)) {\n      cy.get('[data-name=\"chevron-right\"]').click();\n      selectDayFromCurrent(day);\n    } else {\n      cy.get('.day-cell').not('.bounding-month').contains(futureDay).click();\n    }\n  });\n  return dateToAssert;\n}\ncy.visit('/');\ncy.contains('Forms').click();\ncy.contains('Datepicker').click();\ncy.contains('nb-card', 'Common Datepicker').find('input').then(input => {\n  cy.wrap(input).click();\n  const dateToAssert = selectDayFromCurrent(200);\n  cy.wrap(input).invoke('prop', 'value').should('contain', dateToAssert);\n  cy.wrap(input).should('have.value', dateToAssert);\n});",
              "err": {},
              "uuid": "cb3c3880-01a4-4424-93a1-661117cb6d5e",
              "parentUUID": "2be3046f-76fb-492c-8d96-7eb42b89a241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Lists and dropdowns",
              "fullTitle": "First test suite Lists and dropdowns",
              "timedOut": null,
              "duration": 1379,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/');\n//1\ncy.get('nav nb-select').click();\ncy.get('.options-list').contains('Dark').click();\ncy.get('nav nb-select').should('contain', 'Dark');\n//2\ncy.get('nav nb-select').then(dropDown => {\n  cy.wrap(dropDown).click();\n  cy.get('.options-list nb-option').each((listItem, index) => {\n    const itemText = listItem.text().trim();\n    cy.wrap(listItem).click();\n    cy.wrap(dropDown).should('contain', itemText);\n    if (index < 3) {\n      cy.wrap(dropDown).click();\n    }\n  });\n});",
              "err": {},
              "uuid": "7f27e2b8-401f-43e1-81c6-959345a3088a",
              "parentUUID": "2be3046f-76fb-492c-8d96-7eb42b89a241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Web Tables",
              "fullTitle": "First test suite Web Tables",
              "timedOut": null,
              "duration": 5729,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/');\ncy.contains('Tables & Data').click();\ncy.contains('Smart Table').click();\n//1 Get row by text\ncy.get('tbody').contains('tr', 'Larry').then(tablerow => {\n  cy.wrap(tablerow).find('.nb-edit').click();\n  cy.wrap(tablerow).find('[placeholder=\"Age\"]').clear().type('29');\n  cy.wrap(tablerow).find('.nb-checkmark').click();\n  cy.wrap(tablerow).find('td').eq(6).should('contain', '29');\n});\n//2 Get row by index\ncy.get('thead').find('.nb-plus').click();\ncy.get('thead').find('tr').eq(2).then(tableRow => {\n  cy.wrap(tableRow).find('[placeholder=\"First Name\"]').type(\"John\");\n  cy.wrap(tableRow).find('[placeholder=\"Last Name\"]').type(\"Smith\");\n  cy.wrap(tableRow).find('.nb-checkmark').click();\n});\ncy.get('tbody tr').first().find('td').then(tableColumns => {\n  cy.wrap(tableColumns).eq(2).should('contain', 'John');\n  cy.wrap(tableColumns).eq(3).should('contain', 'Smith');\n});\n//3 Get each row validation\nconst age = [20, 30, 40, 200];\ncy.wrap(age).each(age => {\n  cy.get('thead [placeholder=\"Age\"]').clear().type(age);\n  cy.wait(500);\n  cy.get('tbody tr').each(tableRow => {\n    if (age == 200) {\n      cy.wrap(tableRow).should('contain', 'No data found');\n    } else {\n      cy.wrap(tableRow).find('td').eq(6).should('contain', age);\n    }\n  });\n});",
              "err": {},
              "uuid": "34f13823-6d03-425c-b07b-8feddfc110cd",
              "parentUUID": "2be3046f-76fb-492c-8d96-7eb42b89a241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "tooltip",
              "fullTitle": "First test suite tooltip",
              "timedOut": null,
              "duration": 1574,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/');\ncy.contains('Modal & Overlays').click();\ncy.contains('Tooltip').click();\ncy.contains('nb-card', 'Colored Tooltips').contains('Default').click();\ncy.get('nb-tooltip').should('contain', 'This is a tooltip');",
              "err": {},
              "uuid": "2fa44180-7d3f-4298-b7a6-81cbd43091ea",
              "parentUUID": "2be3046f-76fb-492c-8d96-7eb42b89a241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "dialog box",
              "fullTitle": "First test suite dialog box",
              "timedOut": null,
              "duration": 1795,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/');\ncy.contains('Tables & Data').click();\ncy.contains('Smart Table').click();\n//1 Not a good method\ncy.get('tbody tr').first().find('.nb-trash').click();\ncy.on('windiw:confirm', confirm => {\n  expect(confirm).to.equal('Are you sure you want to delete?');\n});\n//2 \nconst stub = cy.stub();\ncy.on('window:confirm', stub);\ncy.get('tbody tr').first().find('.nb-trash').click().then(() => {\n  expect(stub.getCall(0)).to.be.calledWith('Are you sure you want to delete?');\n});\n//3\ncy.get('tbody tr').first().find('.nb-trash').click();\ncy.on('window:confirm', () => false);",
              "err": {},
              "uuid": "6581e738-0d44-43a5-a35a-64f5f785ae45",
              "parentUUID": "2be3046f-76fb-492c-8d96-7eb42b89a241",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0be00270-c87b-47da-b660-d96f842ec230",
            "3dd64630-f391-4776-828a-9391b8f9ecf8",
            "d17c7e11-9947-46a6-96af-3ca8a4b59220",
            "dcb525c7-6f0f-466b-8da0-67412d08b228",
            "c20fc9fb-b795-46d3-8eb0-0e78eab337ff",
            "d1c10e88-1337-4089-bfeb-cee94cb79581",
            "cb3c3880-01a4-4424-93a1-661117cb6d5e",
            "7f27e2b8-401f-43e1-81c6-959345a3088a",
            "34f13823-6d03-425c-b07b-8feddfc110cd",
            "2fa44180-7d3f-4298-b7a6-81cbd43091ea",
            "6581e738-0d44-43a5-a35a-64f5f785ae45"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25189,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}